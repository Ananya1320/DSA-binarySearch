bool possible(vector<int> &arr,int day,int m,int k)
{
	int n=arr.size();
	int cnt=0;
	int nob=0;
	for(int i=0;i<n;i++)
	{
		if(arr[i]<=day)
		{
			cnt++;
		}
		else{
			nob+=cnt/k;
			cnt=0;
		}
	}
	nob+=cnt/k;
	return m<=nob;
}
int roseGarden(vector<int> arr, int k, int m)
{
	// Write your code here
	int n=arr.size();
	long long val=k*1ll*m*1ll;
	if(val>n)
	return -1;
	int maxi=INT_MIN;
	int mini=INT_MAX;
	for(int i=0;i<n;i++)
	{
		maxi=max(maxi,arr[i]);
		mini=min(mini,arr[i]);
	}
	/*for(int i=mini;i<=maxi;i++)
	{
		if(possible(arr,i,m,k))
		{
			return i;
		}
	}
	return -1;*/

	int low=mini,high=maxi;
	while(low<=high)
	{
		int mid=low+(high-low)/2;
		if(possible(arr,mid,m,k))
		high=mid-1;
		else
		low=mid+1;
	}
	return low;

}
