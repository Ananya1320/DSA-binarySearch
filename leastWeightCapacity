int caldays(vector<int> &weights,int cap)
{
    int load=0;
    int days=1;
    for(int i=0;i<weights.size();i++)
    {
        if(load+weights[i]>cap)
        {
            days=days+1;
            load=weights[i];
        }
        else
        {
            load=load+weights[i];
        }
    }
    return days;
}


int leastWeightCapacity(vector<int> &weights, int d)
{
    // Write your code here.
    int n=weights.size();
    int low=*max_element(weights.begin(),weights.end());
    int high=accumulate(weights.begin(), weights.end(), 0);
    while(low<=high)
    {
        int mid=(low+high)/2;
        int p=caldays(weights,mid);
        if(p<=d)
        high=mid-1;
        else
        low=mid+1;

    }
    return low;
}
